name: Absence-Planner - CI Pipeline


# This yaml file will execute when creating a pull request to the "Test" Branch.
# Feature branches should be merged to the test before entering the 
on:
  pull_request:
    branches: [ "Test" ]
  push:
    branches: [ "dev", "Feature_1"]

#NOTES: 
# - For consistency, using PIP in virtual unbuntu environment instead of anaconda
# - 




jobs: 
  build:
    name: Build Application
    strategy:
      max-parallel: 2   # Extend if using more python-versions
      matrix:
        python-version: [3.8]   
          
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }} 
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Setup & Activate Python Environment
      run: |
        python -m venv v
        source v/bin/activate

    - name: Install Application Dependencies
      run: |
        v/bin/python -m v/bin/pip install --upgrade pip
        v/bin/pip3 install -r requirements.txt
        echo "Collecting SeleniumBase & ChromeDriver"
        v/bin/python -m v/bin/pip install seleniumbase
        sbase get chromedriver latest
    - name: Set up Django Environment
      run: |
        echo "Making Migrations"
        v/bin/python3 ap_src/manage.py makemigrations
        echo "Running Migrations"
        v/bin/python3 ap_src/manage.py migrate ap_app
        v/bin/python3 ap_src/manage.py migrate

        echo "Loading Fixtures"
        for FILE in ap_src/ap_app/fixtures/*; 
        do v/bin/python3 ap_src/manage.py loaddata $FILE; done
        
        echo "Collecting Static Files"
        v/bin/python3 ap_src/manage.py collectstatic --noinput
    - name: Install Testing Dependencies
      run: |
        v/bin/pip3 install pytest-django
        v/bin/pip3 install pytest-cov

        touch test_file.txt
        cd ..

        v/bin/pip list

    # - name: Tar Files
    #   run: |
    #     cd ..
    #     tar -czf absence-planner-workspace.tar.gz
    #     ls

    - name: Upload Artifact 
      uses: actions/upload-artifact@v3
      with:
        name: BuiltAppArtifact
        path: "*"

  test:
    name: Test Application
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download Built Artifact
      uses: actions/download-artifact@v3
      with:
        name: BuiltAppArtifact
   
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: 3.8
    
    - name: Test Downloaded Artifact
      run: |
        echo "Activating Python venv"
        source v/bin/activate
        
        v/bin/pip list
        

    - name: Test Downloaded Artifact
      run: |
        echo Running Application Tests With SeleniumBase
        pytest --cov=ap_app ap_src/ap_app --headless --disable-warnings
      